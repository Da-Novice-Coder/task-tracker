{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App_mongo.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","_id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setshowAddTask","setTask","useEffect","getTasks","a","fechTasks","tasksFromServer","herokuapi","fetch","res","json","data","fetchTask","id","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f217867.chunk.js","sourcesContent":["function Button({ color, text, onClick }) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={onClick}\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tclassName='btn'\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nfunction Header({ title, onAdd, showAdd }) {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<Button\r\n\t\t\t\tcolor={showAdd ? 'red' : 'green'}\r\n\t\t\t\ttext={showAdd ? 'close' : 'Add'}\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\n// const headingStyle = {\r\n// \tcolor: 'red',\r\n// };\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Task({ task, onDelete, onToggle }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`task ${task.reminder ? 'reminder' : ''}`}\r\n\t\t\tonDoubleClick={() => onToggle(task._id, task.reminder)}\r\n\t\t>\r\n\t\t\t<div className='task-info'>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t{task.text}{' '}\r\n\t\t\t\t\t<button onClick={() => onDelete(task._id)} className='delete-btn'>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<p>{task.day}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nfunction Tasks({ tasks, onDelete, onToggle }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={task._id}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nfunction AddTask({ onAdd }) {\r\n\tconst [text, setText] = useState('');\r\n\tconst [day, setDay] = useState('');\r\n\tconst [reminder, setReminder] = useState(false);\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!text) {\r\n\t\t\talert('add task');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd({ text, day, reminder });\r\n\t\tsetText('');\r\n\t\tsetDay('');\r\n\t\tsetReminder(false);\r\n\t};\r\n\treturn (\r\n\t\t<form className='form' onSubmit={onSubmit}>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label>Task</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Enter Task'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control'>\r\n\t\t\t\t<label>Enter Date & Time</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Enter Date & Time'\r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e) => setDay(e.target.value)}\r\n\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t\t<div className='form-control form-control-check'>\r\n\t\t\t\t<label>Set Reminder</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\tchecked={reminder}\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tonChange={(e) => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t\t<input className='btn btn-submit' type='submit' value='Save Task'></input>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AddTask;\r\n","import './index.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\tconst [showAddTask, setshowAddTask] = useState(false);\n\tconst [tasks, setTask] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst getTasks = async () => {\n\t\t\tconst tasksFromServer = await fechTasks();\n\t\t\tsetTask(tasksFromServer);\n\t\t};\n\t\tgetTasks();\n\t}, []);\n\n\t// FetchTasks\n\tconst localhost = 'http://localhost:5000';\n\tconst herokuapi = 'https://mytask-trackerapp.herokuapp.com/tasks';\n\n\tconst fechTasks = async () => {\n\t\tconst res = await fetch(`${herokuapi}/tasks`);\n\t\tconst data = await res.json();\n\t\t// console.log(data);\n\t\treturn data;\n\t};\n\n\t// FetchTask\n\n\tconst fetchTask = async (id) => {\n\t\tconst res = await fetch(`${herokuapi}/tasks/${id}`);\n\t\tconst data = await res.json();\n\t\t// console.log(data);\n\t\treturn data;\n\t};\n\n\t// Add Task\n\n\tconst addTask = async (task) => {\n\t\tconst res = await fetch(`${herokuapi}/tasks`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t});\n\n\t\tconst data = await res.json();\n\t\tsetTask([...tasks, data]);\n\n\t\t// console.log(task)\n\t\t// const id = Math.floor(Math.random() * 10000) + 1;\n\t\t// const newTask = { id, ...task };\n\t\t// setTask([...tasks, newTask]);\n\t};\n\n\t// Delete Task\n\n\tconst deleteTask = async (id) => {\n\t\tawait fetch(`${herokuapi}/tasks/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\t\tsetTask(tasks.filter((task) => task._id !== id));\n\t\t// console.log('deleteTask', id);\n\t\t// console.log(tasks);\n\t};\n\n\t// Toggle Reminder\n\tconst toggleReminder = async (id) => {\n\t\t// console.log(typeof id);\n\t\tconst taskToToggle = await fetchTask(id);\n\t\tconst updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n\t\tawait fetch(`${herokuapi}/tasks/${id}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask),\n\t\t});\n\n\t\t// const data = await res.json();\n\t\t// console.log(data);\n\t\t// console.log(typeof data);\n\t\t// console.log(updTask);\n\n\t\tsetTask(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask._id === id ? { ...task, reminder: updatedTask.reminder } : task\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<Header\n\t\t\t\tshowAdd={showAddTask}\n\t\t\t\tonAdd={() => setshowAddTask(!showAddTask)}\n\t\t\t\ttitle='Task Tracker'\n\t\t\t/>\n\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\n\t\t\t{tasks.length > 0 ? (\n\t\t\t\t<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n\t\t\t) : (\n\t\t\t\t<div className='no-task'>No Task To Show</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App_mongo';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}